@model NewDawn.Models.Reserva

@{
    ViewData["Title"] = "Crear Reserva";

    var habitaciones = ViewBag.HabitacionesDisponibles as List<NewDawn.Models.Habitacion> ?? new List<NewDawn.Models.Habitacion>();
    var paquetes = ViewBag.PaquetesDisponibles as List<NewDawn.Models.Paquete> ?? new List<NewDawn.Models.Paquete>();
    var servicios = ViewBag.ServiciosDisponibles as List<NewDawn.Models.Servicio> ?? new List<NewDawn.Models.Servicio>();

    string fechaInicioValue = Model?.FechaComienzo != null
        ? Model.FechaComienzo.Value.ToString("yyyy-MM-dd")
        : DateTime.Today.ToString("yyyy-MM-dd");

    string fechaFinValue = Model?.FechaFin != null
        ? Model.FechaFin.Value.ToString("yyyy-MM-dd")
        : DateTime.Today.AddDays(1).ToString("yyyy-MM-dd");
}

<head>
    <link rel="stylesheet" href="~/css/Reservas/Create.css" />
</head>

<div class="container py-5">
    <form asp-action="Create" method="post" id="reservaForm">
        <h1>Crear Nueva Reserva</h1>
        <input type="hidden" asp-for="Idusuario" />
        <input type="hidden" asp-for="EstadoReserva" value="true" />

        <div class="form-group">
            <label asp-for="FechaComienzo"></label>
            <input asp-for="FechaComienzo" type="date" class="form-control"
                   value="@fechaInicioValue" min="@DateTime.Today.ToString("yyyy-MM-dd")" required />
        </div>

        <div class="form-group">
            <label asp-for="FechaFin"></label>
            <input asp-for="FechaFin" type="date" class="form-control"
                   value="@fechaFinValue" min="@DateTime.Today.AddDays(1).ToString("yyyy-MM-dd")" required />
        </div>

        <div class="form-group">
            <label class="control-label">Seleccionar Habitaciones</label>
            <select id="selectorHabitacion" class="form-control">
                <option value="">-- Seleccionar habitación --</option>
                @foreach (var h in habitaciones.GroupBy(h => h.TipoHabitacion).Select(g => g.First()))
                {
                    <option value="@h.Idhabitacion" data-precio="@h.PrecioNoche" data-capacidad="@h.Capacidad">
                        ID: @h.Idhabitacion - @h.TipoHabitacion - Capacidad: @h.Capacidad - $@h.PrecioNoche
                    </option>
                }
            </select>
            <button type="button" id="agregarHabitacion" class="btn btn-primary mt-2">Agregar Habitación</button>
        </div>

        <table class="table mt-3">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Tipo</th>
                    <th>Capacidad</th>
                    <th>Precio/Noche</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody id="tablaHabitaciones"></tbody>
        </table>

        <div class="form-group">
            <label>Seleccionar Paquete (Opcional)</label>
            <select class="form-control" name="idPaquete">
                <option value="">-- Sin paquete --</option>
                @foreach (var p in paquetes)
                {
                    <option value="@p.Idpaquete" data-precio="@p.Precio">
                        @p.NombrePaquete - $@p.Precio (Incluye: @string.Join(", ", p.ServicioPaquetes?.Select(sp => sp.IdservicioNavigation?.NombreServicio)))
                    </option>
                }
            </select>
        </div>

        <div class="form-group">
            <label>Servicios Adicionales</label>
            <div class="row">
                @foreach (var s in servicios)
                {
                    <div class="col-md-4 mb-3">
                        <div class="card">
                            <div class="card-body">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" name="serviciosSeleccionados"
                                           value="@s.Idservicio" id="servicio_@s.Idservicio" data-precio="@s.ValorServicio" />
                                    <label class="form-check-label" for="servicio_@s.Idservicio">
                                        @s.NombreServicio<br />$@s.ValorServicio
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <div class="form-group">
            <label asp-for="ValorTotal">Valor Total (estimado)</label>
            <input asp-for="ValorTotal" class="form-control" readonly />
            <input type="hidden" asp-for="ValorTotal" />
        </div>

        <div class="form-group text-right">
            <button type="submit" class="btn btn-primary">Guardar Reserva</button>
            <a asp-action="Index" class="btn btn-secondary">Cancelar</a>
        </div>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {
            function formatDate(date) {
                return date.toISOString().split('T')[0];
            }

            $('input[name="FechaComienzo"]').change(function () {
                var startDate = new Date(this.value);
                if (isNaN(startDate.getTime())) return;

                var minEndDate = new Date(startDate);
                minEndDate.setDate(minEndDate.getDate() + 1);

                var endDateInput = $('input[name="FechaFin"]');
                endDateInput.attr('min', formatDate(minEndDate));

                var currentEndDate = new Date(endDateInput.val());
                if (isNaN(currentEndDate.getTime())) {
                    endDateInput.val(formatDate(minEndDate));
                } else if (currentEndDate <= startDate) {
                    endDateInput.val(formatDate(minEndDate));
                }

                actualizarHabitaciones();
            });

            $('input[name="FechaFin"]').change(function () {
                actualizarHabitaciones();
            });

            function calcularTotal() {
                let total = 0;

                let fechaInicio = new Date($('input[name="FechaComienzo"]').val());
                let fechaFin = new Date($('input[name="FechaFin"]').val());

                let cantidadDias = Math.floor((fechaFin - fechaInicio) / (1000 * 60 * 60 * 24));
                if (isNaN(cantidadDias) || cantidadDias <= 0) cantidadDias = 1;

                // Habitaciones seleccionadas
                $('#tablaHabitaciones input[name="habitacionesSeleccionadas"]').each(function () {
                    let id = $(this).val();
                    let precio = parseFloat($('#selectorHabitacion option[value="' + id + '"]').data('precio')) || 0;
                    total += precio * cantidadDias;
                });

                // Paquete
                let paquete = $('select[name="idPaquete"] option:selected');
                let precioPaquete = parseFloat(paquete.data('precio')) || 0;
                if (precioPaquete > 0) {
                    total += precioPaquete;
                }

                // Servicios
                $('input[name="serviciosSeleccionados"]:checked').each(function () {
                    total += parseFloat($(this).data('precio')) || 0;
                });

                $('input[name="ValorTotal"]').val(total.toFixed(2));
            }

            $('input[name="FechaComienzo"], input[name="FechaFin"], input[name="serviciosSeleccionados"], select[name="idPaquete"]').on('change', calcularTotal);
            $(document).on('change', 'input[name="habitacionesSeleccionadas"]', calcularTotal);

            function actualizarHabitaciones() {
                const fechaInicio = $('input[name="FechaComienzo"]').val();
                const fechaFin = $('input[name="FechaFin"]').val();

                if (!fechaInicio || !fechaFin) return;

                $.ajax({
                    url: '@Url.Action("FiltrarHabitaciones", "Reservas")',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ fechaInicio, fechaFin }),
                    success: function (habitaciones) {
                        const selector = $('#selectorHabitacion');
                        selector.empty().append('<option value="">-- Seleccionar habitación --</option>');

                        let tiposIncluidos = [];

                        habitaciones.forEach(h => {
                            if (h.idhabitacion === 0) return;

                            if (!tiposIncluidos.includes(h.tipoHabitacion)) {
                                tiposIncluidos.push(h.tipoHabitacion);

                                selector.append(
                                    <option value="${h.idhabitacion}" data-precio="${h.precioNoche}" data-capacidad="${h.capacidad}">
                                        ID: ${h.idhabitacion} - ${h.tipoHabitacion} - Capacidad: ${h.capacidad} - $${h.precioNoche}
                                    </option>);
                            }
                        });
                    },
                    error: function () {
                        alert('Error al cargar habitaciones disponibles.');
                    }
                });
            }

            // Agregar habitación desde el selector
                $(document).on('click', '#agregarHabitacion', function () {
            let select = $('#selectorHabitacion');
            let option = select.find(':selected');

            if (!option.val()) {
                alert('Por favor, selecciona una habitación válida.');
                return;
            }

            let id = option.val();
            let text = option.text();
            let precio = parseFloat(option.data('precio')) || 0;
            let capacidad = option.data('capacidad');

            if (!capacidad || isNaN(precio)) {
                alert('Los datos de la habitación seleccionada son inválidos.');
                return;
            }

            if (!$('#habitacion-' + id).length) {
                let fila = $(`
                    <tr id="habitacion-${id}">
                        <td>${id}</td>
                        <td>${text.split(' - ')[1]}</td>
                        <td>${capacidad}</td>
                        <td>$${precio.toFixed(2)}</td>
                        <td>
                            <button type="button" class="btn btn-danger btn-sm eliminarHabitacion" data-id="${id}">Eliminar</button>
                        </td>
                        <input type="hidden" name="habitacionesSeleccionadas" value="${id}" />
                    </tr>
                `);
                $('#tablaHabitaciones').append(fila);
                calcularTotal();
            } else {
                alert('Esta habitación ya ha sido agregada.');
            }
        });
    </script>
}

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger mt-3">
        <h5>Errores de validación:</h5>
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}

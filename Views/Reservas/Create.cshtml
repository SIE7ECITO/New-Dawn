@model NewDawn.Models.Reserva
@{
    ViewData["Title"] = "Crear Reserva";

    var habitaciones = ViewBag.HabitacionesDisponibles as List<NewDawn.Models.Habitacion> ?? new List<NewDawn.Models.Habitacion>();
    var paquetes = ViewBag.PaquetesDisponibles as List<NewDawn.Models.Paquete> ?? new List<NewDawn.Models.Paquete>();
    var servicios = ViewBag.ServiciosDisponibles as List<NewDawn.Models.Servicio> ?? new List<NewDawn.Models.Servicio>();

    string fechaInicioValue = Model?.FechaComienzo != null
        ? Model.FechaComienzo.Value.ToString("yyyy-MM-dd")
        : DateTime.Today.ToString("yyyy-MM-dd");

    string fechaFinValue = Model?.FechaFin != null
        ? Model.FechaFin.Value.ToString("yyyy-MM-dd")
        : DateTime.Today.AddDays(1).ToString("yyyy-MM-dd");
}

<div class="card">
    <div class="card-header">
        <h3 class="card-title">Crear Nueva Reserva</h3>
    </div>
    <div class="card-body">
        <form asp-action="Create" method="post" id="reservaForm">
            <input type="hidden" asp-for="Idusuario" />
            <input type="hidden" asp-for="EstadoReserva" value="true" />

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="FechaComienzo" class="control-label"></label>
                        <input asp-for="FechaComienzo"
                               type="date"
                               class="form-control"
                               value="@fechaInicioValue"
                               min="@DateTime.Today.ToString("yyyy-MM-dd")"
                               required />
                        <span asp-validation-for="FechaComienzo" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="FechaFin" class="control-label"></label>
                        <input asp-for="FechaFin"
                               type="date"
                               class="form-control"
                               value="@fechaFinValue"
                               min="@DateTime.Today.AddDays(1).ToString("yyyy-MM-dd")"
                               required />
                        <span asp-validation-for="FechaFin" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label">Seleccionar Habitaciones</label>
                <select id="selectorHabitacion" class="form-control">
                    <option value="">-- Seleccionar habitación --</option>
                    @{
                        var habitacionesUnicas = habitaciones
                        .GroupBy(h => h.TipoHabitacion)
                        .Select(g => g.First())
                        .Where(h => h.Idhabitacion != 0)
                        .ToList();
                    }
                    @foreach (var h in habitacionesUnicas)
                    {
                        <option value="@h.Idhabitacion" data-precio="@h.PrecioNoche" data-capacidad="@h.Capacidad">
                            ID: @h.Idhabitacion - @h.TipoHabitacion - Capacidad: @h.Capacidad - $@h.PrecioNoche
                        </option>
                    }
                </select>
                <button type="button" id="agregateHabitacion" class="btn btn-primary mt-2">Agregar Habitación</button>
            </div>

            <table class="table mt-3">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Tipo</th>
                        <th>Capacidad</th>
                        <th>Precio/Noche</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody id="tablaHabitaciones"></tbody>
            </table>

            <div class="form-group">
                <label class="control-label">Seleccionar Paquete (Opcional)</label>
                <select class="form-control" name="idPaquete">
                    <option value="" data-precio="0">-- Sin paquete --</option>
                    @foreach (var p in paquetes)
                    {
                        <option value="@p.Idpaquete" data-precio="@p.Precio">
                            @p.NombrePaquete - $@p.Precio (Incluye:
                            @string.Join(", ", p.ServicioPaquetes?.Select(sp => sp.IdservicioNavigation?.NombreServicio) ?? new List<string>()))
                        </option>
                    }
                </select>
            </div>

            <div class="form-group">
                <label class="control-label">Servicios Adicionales</label>
                <div class="row">
                    @if (servicios.Any())
                    {
                        foreach (var s in servicios)
                        {
                            <div class="col-md-3 mb-3">
                                <div class="card">
                                    <div class="card-body">
                                        <div class="form-check">
                                            <input class="form-check-input"
                                                   type="checkbox"
                                                   name="serviciosSeleccionados"
                                                   value="@s.Idservicio"
                                                   id="servicio_@s.Idservicio"
                                                   data-precio="@s.ValorServicio" />
                                            <label class="form-check-label" for="servicio_@s.Idservicio">
                                                @s.NombreServicio<br />
                                                $@s.ValorServicio
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="col-12">
                            <div class="alert alert-warning">No hay servicios adicionales disponibles</div>
                        </div>
                    }
                </div>
            </div>

            <div class="form-group">
                <label asp-for="ValorTotal" class="control-label">Valor Total (estimado)</label>
                <input asp-for="ValorTotal" class="form-control" readonly />
                <input type="hidden" asp-for="ValorTotal" />
            </div>

            <div class="form-group text-right">
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-save"></i> Guardar Reserva
                </button>
                <a asp-action="Index" class="btn btn-secondary">
                    <i class="fas fa-arrow-left"></i> Cancelar
                </a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {
            // Formatea fecha a YYYY-MM-DD
            function formatDate(date) {
                if (!date) return '';
                return date.toISOString().split('T')[0];
            }

            // Inicializa fechas
            function initializeDates() {
                var today = new Date();
                var tomorrow = new Date(today);
                tomorrow.setDate(today.getDate() + 1);

                $('input[name="FechaComienzo"]').val(formatDate(today));
                $('input[name="FechaFin"]').val(formatDate(tomorrow));
                $('input[name="FechaComienzo"]').attr('min', formatDate(today));
                $('input[name="FechaFin"]').attr('min', formatDate(tomorrow));
            }

            // Maneja cambios en fechas
            function setupDateHandlers() {
                $('input[name="FechaComienzo"]').on('change', function () {
                    var startDate = new Date(this.value);
                    if (isNaN(startDate.getTime())) return;

                    var minEndDate = new Date(startDate);
                    minEndDate.setDate(minEndDate.getDate() + 1);

                    var endDateInput = $('input[name="FechaFin"]');
                    endDateInput.attr('min', formatDate(minEndDate));

                    var currentEndDate = new Date(endDateInput.val());
                    if (isNaN(currentEndDate.getTime()) || currentEndDate <= startDate) {
                        endDateInput.val(formatDate(minEndDate));
                    }

                    actualizarHabitaciones();
                    calcularTotal();
                });

                $('input[name="FechaFin"]').on('change', function () {
                    actualizarHabitaciones();
                    calcularTotal();
                });
            }

            // Calcula el total
            function calcularTotal() {
                let total = 0;
                let fechaInicio = new Date($('input[name="FechaComienzo"]').val());
                let fechaFin = new Date($('input[name="FechaFin"]').val());

                if (isNaN(fechaInicio.getTime())) fechaInicio = new Date();
                if (isNaN(fechaFin.getTime())) {
                    fechaFin = new Date(fechaInicio);
                    fechaFin.setDate(fechaInicio.getDate() + 1);
                }

                let diffTime = fechaFin - fechaInicio;
                let diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
                if (isNaN(diffDays)) diffDays = 1;

                // Habitaciones
                $('#tablaHabitaciones tr').each(function () {
                    let id = $(this).find('input[name="habitacionesSeleccionadas"]').val();
                    if (id) {
                        let precio = parseFloat($('#selectorHabitacion option[value="' + id + '"]').data('precio')) || 0;
                        total += precio * diffDays;
                    }
                });

                // Paquete
                let paquete = $('select[name="idPaquete"] option:selected');
                let precioPaquete = parseFloat(paquete.data('precio')) || 0;
                if (precioPaquete > 0) {
                    total += precioPaquete * diffDays;
                }

                // Servicios
                $('input[name="serviciosSeleccionados"]:checked').each(function () {
                    total += parseFloat($(this).data('precio')) || 0;
                });

                $('input[name="ValorTotal"]').val(total.toFixed(2));
            }

            // Carga habitaciones disponibles
            function actualizarHabitaciones() {
                const fechaInicio = $('input[name="FechaComienzo"]').val();
                const fechaFin = $('input[name="FechaFin"]').val();
                if (!fechaInicio || !fechaFin) return;

                $.ajax({
                    url: '@Url.Action("FiltrarHabitaciones", "Reservas")',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ fechaInicio, fechaFin }),
                    success: function (habitaciones) {
                        const selector = $('#selectorHabitacion');
                        const currentSelection = selector.val();

                        selector.empty().append('<option value="">-- Seleccionar habitación --</option>');

                        let tiposIncluidos = [];
                        let habitacionesAgrupadas = [];

                        habitaciones.forEach(function (h) {
                            if (h.idhabitacion === 0) return;
                            if (!tiposIncluidos.includes(h.tipoHabitacion)) {
                                tiposIncluidos.push(h.tipoHabitacion);
                                habitacionesAgrupadas.push(h);
                            }
                        });

                        habitacionesAgrupadas.sort((a, b) => {
                            if (a.tipoHabitacion === b.tipoHabitacion) {
                                return a.precioNoche - b.precioNoche;
                            }
                            return a.tipoHabitacion.localeCompare(b.tipoHabitacion);
                        });

                        habitacionesAgrupadas.forEach(function (h) {
                            selector.append(
                                '<option value="' + h.idhabitacion + '" ' +
                                'data-precio="' + h.precioNoche + '" ' +
                                'data-capacidad="' + h.capacidad + '" ' +
                                'data-tipo="' + h.tipoHabitacion + '">' +
                                'ID: ' + h.idhabitacion + ' - ' + h.tipoHabitacion +
                                ' - Capacidad: ' + h.capacidad +
                                ' - $' + h.precioNoche.toFixed(2) +
                                '</option>'
                            );
                        });

                        if (currentSelection && selector.find('option[value="' + currentSelection + '"]').length) {
                            selector.val(currentSelection);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('Error al cargar habitaciones:', error);
                        alert('No se pudieron cargar las habitaciones disponibles. Por favor intente nuevamente.');
                    }
                });
            }

            // Agrega habitación seleccionada
            function setupHabitacionHandlers() {
                $('#agregarHabitacion').on('click', function () {
                    const select = $('#selectorHabitacion');
                    const option = select.find(':selected');
                    const id = option.val();

                    if (!id) {
                        alert('Por favor seleccione una habitación');
                        return;
                    }

                    if ($('#habitacion-' + id).length) {
                        alert('Esta habitación ya ha sido agregada');
                        return;
                    }

                    const tipo = option.data('tipo');
                    const capacidad = option.data('capacidad');
                    const precio = parseFloat(option.data('precio')) || 0;

                    const fila = `
                        <tr id="habitacion-${id}">
                            <td>${id}</td>
                            <td>${tipo}</td>
                            <td>${capacidad}</td>
                            <td>$${precio.toFixed(2)}</td>
                            <td>
                                <button type="button" class="btn btn-danger btn-sm eliminarHabitacion" data-id="${id}">
                                    <i class="fas fa-trash-alt"></i>
                                </button>
                            </td>
                            <input type="hidden" name="habitacionesSeleccionadas" value="${id}" />
                        </tr>
                    `;

                    $('#tablaHabitaciones').append(fila);
                    calcularTotal();
                    select.val('');
                });

                $(document).on('click', '.eliminarHabitacion', function () {
                    const id = $(this).data('id');
                    $(`#habitacion-${id}`).remove();
                    calcularTotal();
                });
            }

            // Otros eventos
            function setupEventListeners() {
                $('input[name="serviciosSeleccionados"], select[name="idPaquete"]').on('change', calcularTotal);
            }

            // Inicialización
            function initializePage() {
                initializeDates();
                setupDateHandlers();
                setupHabitacionHandlers();
                setupEventListeners();
                actualizarHabitaciones();
                calcularTotal();
            }

            initializePage();
        });
    </script>
}

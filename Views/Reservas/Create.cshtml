@model NewDawn.Models.Reserva
@{
    ViewData["Title"] = "Crear Reserva";

    var habitaciones = ViewBag.HabitacionesDisponibles as List<NewDawn.Models.Habitacion> ?? new List<NewDawn.Models.Habitacion>();
    var paquetes = ViewBag.PaquetesDisponibles as List<NewDawn.Models.Paquete> ?? new List<NewDawn.Models.Paquete>();
    var servicios = ViewBag.ServiciosDisponibles as List<NewDawn.Models.Servicio> ?? new List<NewDawn.Models.Servicio>();

    string fechaInicioValue = Model?.FechaComienzo != null
        ? Model.FechaComienzo.Value.ToString("yyyy-MM-dd")
        : DateTime.Today.ToString("yyyy-MM-dd");

    string fechaFinValue = Model?.FechaFin != null
        ? Model.FechaFin.Value.ToString("yyyy-MM-dd")
        : DateTime.Today.AddDays(1).ToString("yyyy-MM-dd");
}

<div class="card">
    <div class="card-header">
        <h3 class="card-title">Crear Nueva Reserva</h3>
    </div>
    <div class="card-body">
        <form asp-action="Create" method="post" id="reservaForm">
            <input type="hidden" asp-for="Idusuario" />
            <input type="hidden" asp-for="EstadoReserva" value="true" />

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="FechaComienzo" class="control-label"></label>
                        <input asp-for="FechaComienzo" 
                               type="date"
                               class="form-control"
                               value="@fechaInicioValue"
                               min="@DateTime.Today.ToString("yyyy-MM-dd")"
                               required />
                        <span asp-validation-for="FechaComienzo" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="FechaFin" class="control-label"></label>
                        <input asp-for="FechaFin" 
                               type="date"
                               class="form-control"
                               value="@fechaFinValue"
                               min="@DateTime.Today.AddDays(1).ToString("yyyy-MM-dd")"
                               required />
                        <span asp-validation-for="FechaFin" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label">Seleccionar Habitaciones</label>
                <div class="row">
                    @if (habitaciones.Any())
                    {
                        foreach (var h in habitaciones)
                        {
                            <div class="col-md-4 mb-3">
                                <div class="card">
                                    <div class="card-body">
                                        <div class="form-check">
                                            <input class="form-check-input"
                                                   type="checkbox"
                                                   name="habitacionesSeleccionadas"
                                                   value="@h.Idhabitacion"
                                                   id="habitacion_@h.Idhabitacion"
                                                   data-precio="@h.PrecioNoche" />

                                            <label class="form-check-label" for="habitacion_@h.Idhabitacion">
                                                <strong>@h.TipoHabitacion</strong><br>
                                                Precio: $@h.PrecioNoche/noche<br>
                                                Capacidad: @h.Capacidad personas
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="col-12">
                            <div class="alert alert-warning">No hay habitaciones disponibles</div>
                        </div>
                    }
                </div>
            </div>

            <div class="form-group">
                <label class="control-label">Seleccionar Paquete (Opcional)</label>
                <select class="form-control" name="idPaquete">
                    <option value="">-- Sin paquete --</option>
                    @foreach (var p in paquetes)
                    {
                        <option value="@p.Idpaquete">
                            @p.NombrePaquete - $@p.Precio (Incluye:
                            @string.Join(", ", p.ServicioPaquetes?.Select(sp => sp.IdservicioNavigation?.NombreServicio) ?? new List<string>()))
                        </option>
                    }
                </select>
            </div>

            <div class="form-group">
                <label class="control-label">Servicios Adicionales</label>
                <div class="row">
                    @if (servicios.Any())
                    {
                        foreach (var s in servicios)
                        {
                            <div class="col-md-3 mb-3">
                                <div class="card">
                                    <div class="card-body">
                                        <div class="form-check">
                                            <input class="form-check-input"
                                                   type="checkbox"
                                                   name="serviciosSeleccionados"
                                                   value="@s.Idservicio"
                                                   id="servicio_@s.Idservicio"
                                                   data-precio="@s.ValorServicio" />
                                            <label class="form-check-label" for="servicio_@s.Idservicio">
                                                @s.NombreServicio<br>
                                                $@s.ValorServicio
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="col-12">
                            <div class="alert alert-warning">No hay servicios adicionales disponibles</div>
                        </div>
                    }
                </div>

            </div>
            <div class="form-group">
                <label asp-for="ValorTotal" class="control-label">Valor Total (estimado)</label>
                <input asp-for="ValorTotal" class="form-control" readonly />
                <input type="hidden" asp-for="ValorTotal" />
            </div>
            <div class="form-group text-right">
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-save"></i> Guardar Reserva
                </button>
                <a asp-action="Index" class="btn btn-secondary">
                    <i class="fas fa-arrow-left"></i> Cancelar
                </a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        $(document).ready(function() {
            // Sincronizar fecha mínima de fin
            $('input[name="FechaComienzo"]').change(function() {
                var startDate = new Date(this.value);
                if (isNaN(startDate.getTime())) return;
                
                var minEndDate = new Date(startDate);
                minEndDate.setDate(minEndDate.getDate() + 1);
                
                var endDateInput = $('input[name="FechaFin"]');
                endDateInput.attr('min', formatDate(minEndDate));
                
                // Ajustar fecha fin si es necesario
                var currentEndDate = new Date(endDateInput.val());
                if (isNaN(currentEndDate.getTime()) {
                    endDateInput.val(formatDate(minEndDate));
                } else if (currentEndDate <= startDate) {
                    endDateInput.val(formatDate(minEndDate));
                }
            });
            
            // Formatear fecha para input type="date"
            function formatDate(date) {
                return date.toISOString().split('T')[0];
            }
        });

    </script>
    <script>
        function calcularTotal() {
            let total = 0;

            // Días entre fechas
            let fechaInicio = new Date($('input[name="FechaComienzo"]').val());
            let fechaFin = new Date($('input[name="FechaFin"]').val());

            let cantidadDias = Math.floor((fechaFin - fechaInicio) / (1000 * 60 * 60 * 24));
            if (isNaN(cantidadDias) || cantidadDias <= 0) {
                cantidadDias = 1; // fallback
            }

            // Habitaciones seleccionadas
            $('input[name="habitacionesSeleccionadas"]:checked').each(function () {
                let precioNoche = parseFloat($(this).data('precio')) || 0;
                total += precioNoche * cantidadDias;
            });

            // Paquete seleccionado
            let paquete = $('select[name="idPaquete"] option:selected');
            let precioPaquete = parseFloat(paquete.data('precio')) || 0;
            if (precioPaquete > 0) {
                total += precioPaquete;
            }

            // Servicios adicionales
            $('input[name="serviciosSeleccionados"]:checked').each(function () {
                let precioServicio = parseFloat($(this).data('precio')) || 0;
                total += precioServicio;
            });

            // Mostrar total
            $('input[name="ValorTotal"]').val(total.toFixed(2));
            $('input[name="ValorTotal"]').next('input[type="hidden"]').val(total.toFixed(2));
        }

        $(document).ready(function () {
            // Recalcular cuando cambien fechas, habitaciones, paquete o servicios
            $('input[name="FechaComienzo"], input[name="FechaFin"]').on('change', calcularTotal);
            $('input[name="habitacionesSeleccionadas"], input[name="serviciosSeleccionados"]').on('change', calcularTotal);
            $('select[name="idPaquete"]').on('change', calcularTotal);

            // Calcular al cargar la página
            calcularTotal();
        });
    </script>

}

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger mt-3">
        <h5>Errores de validación:</h5>
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}